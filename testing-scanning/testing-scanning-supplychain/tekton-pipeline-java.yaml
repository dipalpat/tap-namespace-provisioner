#@ load("@ytt:data", "data")
#@ def in_list(key, list):
#@  return hasattr(data.values.tap_values, key) and (data.values.tap_values[key] in list)
#@ end
#! This if condition ensures that this Java Tekton pipeline is only created if the supply chain is testing or testing_scanning, and the TAP profile used is full, iterate or build.
#@ if/end in_list('supply_chain', ['testing', 'testing_scanning']) and in_list('profile', ['full', 'iterate', 'build']):
#! ---
#! apiVersion: apiextensions.k8s.io/v1
#! kind: CustomResourceDefinition
#! metadata:
#!   name: pipelines.tekton.dev
#!   annotations:
#!     kapp.k14s.io/change-group: tekton-crd
#!     kapp.k14s.io/exists: ""
#! spec:
#!   scope: Namespaced
#!   group: tekton.dev
#!   versions:
#!     - name: v1beta1
#!   names:
#!     kind: Pipeline
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: tekton-pipeline-java
  annotations:
    kapp.k14s.io/create-strategy: fallback-on-update
#!    kapp.k14s.io/change-rule.0: "upsert after upserting tekton-crd"
  labels:
    apps.tanzu.vmware.com/pipeline:  test
spec:
  params:
    - name: source-url
    - name: source-revision
  tasks:
    - name: test
      params:
        - name: source-url
          value: $(params.source-url)
        - name: source-revision
          value: $(params.source-revision)
      taskSpec:
        params:
          - name: source-url
          - name: source-revision
        steps:
          - name: test
            image: bellsoft/liberica-openjdk-alpine:18
            script: |-
              cd `mktemp -d`
              wget -qO- $(params.source-url) | tar xvz -m
              if [ -f "./mvnw" ]; then
                  ./mvnw verify -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=info
              elif [ -f "./gradlew" ]; then
                  ./gradlew test
              else
                  echo "WARNING: No tests were run. This workload is not built with one of the currently supported frameworks (maven or gradle). If using another language/framework, update the image and the script sections of the 'pipeline.tekton.dev' resource in your namespace to match your language/framework."
                  exit 1
              fi
            volumeMounts:
              - mountPath: /var/run/
                name: dind-socket
        sidecars:
          - image: docker:20.10.17-dind
            name: docker
            securityContext:
              privileged: true
            volumeMounts:
              - mountPath: /var/run/
                name: dind-socket
        volumes:
          - name: dind-socket
            emptyDir: { }